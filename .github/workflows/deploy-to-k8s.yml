name: Deploy to Kubernetes

# When used with auth_method "gke", this workflow uses workload identity
# federation, and requires that the appropriate policy binding has been set up
# for the calling repository. See if it has with:
#
#     gcloud iam service-accounts get-iam-policy deploy@replicate-production.iam.gserviceaccount.com
#
# Note that the calling workflow will also need to specify the appropriate
# permissions on the job that uses this workflow, e.g.
#
#     deploy:
#       permissions:
#         contents: 'read'
#         id-token: 'write'
#       uses: replicate/workflows/.github/workflows/deploy-to-k8s.yml@main

on:
  workflow_call:
    inputs:
      target_name:
        type: string
        description: A display name for the current deployment target
      auth_method:
        required: true
        type: string
        description: How to authenticate to the cluster (one of "kubeconfig", "aws", "gke").
      auth_params:
        type: string
        description: >
          Auth payload for the specified auth mechanism. For auth_method "gke"
          this should be a JSON string representing the inputs to
          google-github-actions/get-gke-credentials. For auth_method "aws" this
          should be a JSON string with keys: `role_arn`,
          `role_session_name`, `aws_region` and `cluster_name`.
      run:
        required: true
        type: string
        description: The deployment command to run
      honeycomb_dataset:
        required: true
        type: string
        description: The name of the Honeycomb dataset used for the deployment marker
      install_helm:
        required: false
        type: boolean
        description: Whether this deployment needs helm to be installed (installs helm-secrets if install_sops is also specified)
        default: false
      install_kustomize:
        required: false
        type: boolean
        description: Whether this deployment needs the kustomize CLI to be installed
        default: false
      install_sops:
        required: false
        type: boolean
        description: Whether this deployment needs SOPS to be installed
        default: false
      use_heroku_api_key:
        required: false
        type: boolean
        description: Whether the deployment script uses the HEROKU_API_KEY
        default: false
    secrets:
      HEROKU_API_KEY:
        required: false
      HONEYCOMB_API_KEY:
        required: true
      KUBECONFIG:
        required: false

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    if: ${{ (github.event_name == 'workflow_dispatch' || github.event_name == 'push') && (github.ref == format('refs/heads/{0}', github.event.repository.default_branch)) }}

    env:
      COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
      COMMIT_URL: ${{ github.event.head_commit.url }}

      AWS_REGION: ${{ inputs.auth_method == 'aws' && fromJSON(inputs.auth_params)['aws_region'] }}
      AWS_ROLE_SESSION_NAME: ${{ inputs.auth_method == 'aws' && fromJSON(inputs.auth_params)['role_session_name'] }}
      AWS_ROLE_ARN: ${{ inputs.auth_method == 'aws' && fromJSON(inputs.auth_params)['role_arn'] }}
      AWS_CLUSTER_NAME: ${{ inputs.auth_method == 'aws' && fromJSON(inputs.auth_params)['cluster_name'] }}

    steps:
      - uses: actions/checkout@v4

      - name: Validate auth method
        if: ${{ inputs.auth_method != 'aws' && inputs.auth_method != 'gke' && inputs.auth_method != 'kubeconfig' }}
        run: |-
          echo "Invalid auth method: must be one of kubeconfig, aws, gke" >&2
          exit 1

      - name: Authenticate to AWS
        uses: aws-actions/configure-aws-credentials@v4
        if: ${{ inputs.auth_method == 'aws' }}
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          role-session-name: ${{ env.AWS_ROLE_SESSION_NAME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Authenticate to Google Cloud
        if: ${{ inputs.auth_method == 'gke' || inputs.install_sops }}
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: projects/1025538909507/locations/global/workloadIdentityPools/github/providers/github-actions
          service_account: deploy@replicate-production.iam.gserviceaccount.com

      - name: Install cluster credentials (AWS)
        if: ${{ inputs.auth_method == 'aws' }}
        run: aws eks update-kubeconfig --name ${{ env.AWS_CLUSTER_NAME }} --region ${{ env.AWS_REGION }}

      - name: Install cluster credentials (GKE)
        if: ${{ inputs.auth_method == 'gke' }}
        uses: google-github-actions/get-gke-credentials@v2
        with: ${{ fromJSON(inputs.auth_params) }}

      - name: Install cluster credentials (kubeconfig)
        if: ${{ inputs.auth_method == 'kubeconfig' }}
        uses: azure/k8s-set-context@v4.0.0
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBECONFIG }}

      - name: Install sops
        if: ${{ inputs.install_sops }}
        uses: mdgreenwald/mozilla-sops-action@v1.5.0
        with:
          version: 'v3.7.3'

      - name: Install helm
        if: ${{ inputs.install_helm }}
        uses: azure/setup-helm@v4.0.0
        with:
          version: 'v3.11.1'

      - name: Install helm-secrets
        if: ${{ inputs.install_helm && inputs.install_sops }}
        run: helm plugin install https://github.com/jkroepke/helm-secrets --version v4.4.2

      - name: Install kustomize
        if: ${{ inputs.install_kustomize }}
        run: |-
          mkdir -p "$HOME/.local/bin"
          curl -sfL https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv5.0.0/kustomize_v5.0.0_linux_amd64.tar.gz | tar -zx -C "$HOME/.local/bin"
          chmod +x "$HOME/.local/bin/kustomize"
          echo "$HOME/.local/bin" >> "$GITHUB_PATH"

      - name: Install honeymarker
        run: |-
          mkdir -p "$HOME/.local/bin"
          curl -sSL https://github.com/honeycombio/honeymarker/releases/download/v0.2.11/honeymarker-linux-amd64 -o "$HOME/.local/bin/honeymarker"
          chmod +x "$HOME/.local/bin/honeymarker"
          echo "$HOME/.local/bin" >> "$GITHUB_PATH"

      - name: Add deployment marker to Honeycomb
        id: honeycomb_marker
        env:
          HONEYCOMB_API_KEY: ${{ secrets.HONEYCOMB_API_KEY }}
        run: |-
          <<<"$COMMIT_MESSAGE" read -r message_first_line
          marker=$(honeymarker add \
            -d "${{inputs.honeycomb_dataset}}" \
            -t deploy \
            -m "[${{inputs.target_name}}] $message_first_line" \
            -u "$COMMIT_URL")
          echo marker="$marker" >> "$GITHUB_OUTPUT"

      - name: Expose HEROKU_API_KEY
        if: ${{ inputs.use_heroku_api_key }}
        run: echo "HEROKU_API_KEY=${{ secrets.HEROKU_API_KEY }}" >> "$GITHUB_ENV"

      - name: Deploy
        run: ${{ inputs.run }}

      - name: Unexpose HEROKU_API_KEY
        if: ${{ inputs.use_heroku_api_key }}
        run: echo "HEROKU_API_KEY=" >> "$GITHUB_ENV"

      - name: Update deployment marker
        env:
          HONEYCOMB_API_KEY: ${{ secrets.HONEYCOMB_API_KEY }}
        run: |-
          honeymarker update \
            -d ${{inputs.honeycomb_dataset}} \
            -i ${{fromJSON(steps.honeycomb_marker.outputs.marker).id}} \
            -e "$(date +%s)"
